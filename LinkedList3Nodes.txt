// Program for creating 3 node using Linked List in C language

#include<stdio.h>
#inlcude<stlib> // for malloc function

struct Node
{

int data ;  // data holding part

struct Node* next; // self referencing Node i,e a point to its self fro pointing to the next node

};


void printList( struct Node* head)
{

struct Node* ptr = head; // using a different ptr to referene head since don't wanna make changes in the original head pointer

while(  ptr !=NULL)
{
  printf("%d",ptr->data);
  ptr = ptr->next;

}

}


void addFirst(struct Node* head, int data)
{

struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
new_node->data;
new_node->next = head;
head= new_node;


}

void addAfterBefore(struct Node* head , int data, struct Node * node)
{
//insert after node passed in the method

struct Node* new_node = (struct Node*) malloc(sizeof(struct Node));
struct Node* ptr = head;
struct Node* prev ;

new_node->data = data;

while( ptr!= node)
{
prev =ptr;
ptr=ptr->next;
}

new_node= ptr;
new_node->next=ptr->next
prev->next=new_node;







}

void addLast( struct Node* head, int data)
{

struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
struct Node* ptr = head;
struct Node* prev;

while( ptr!=NULL)
{
  prev=ptr;
  ptr=ptr->next;

}

prev->next=new_node;
new_node= data;

new_node->next= NULL;


}
void main()
{

struct Node* head =(struct Node*) malloc(sizeof(struct Node)) ; // alllocationg space for node and then typcasting it to struct Node* type
struct Node* second = (struct Node*) malloc(sizeof(struct Node));
struct Node* third =(struct Node*)malloc(sizeof(struct Node));



printf("enter head node data");
int datahead;
scanf("%d",&datahead);
head->data = datahead;

head->next = second;
second->data= 2;

second ->next = third;
third->data = 3;

third->next= NULL;



printList(head);




}